<link href="../css/jquery-jvectormap-1.2.2.css" rel="stylesheet">
<script src="http://code.highcharts.com/3.0/highcharts.js"></script>
<script src="/js/themes/paasify.js"></script>
<script src="http://code.highcharts.com/modules/exporting.js"></script>
<link rel="stylesheet" href="/css/theme.bootstrap.css">
<style>
        /* Main marketing message and sign up button */
    .jumbotron {
        /*height: 400px;*/
        margin: 50px 0;
        text-align: center;
        background-size: 100%;
    }

    .jumbotron h1 {
        font-size: 60px;
        line-height: 1;
        background: rgba(255, 255, 255, 0.6);
    }

    .jumbotron .lead {
        font-size: 18px;
        line-height: 1.25;
        background: rgba(255, 255, 255, 0.6);
    }

    .jumbotron .btn {
        font-size: 21px;
        padding: 14px 24px;
    }

    .chart {
        padding-top: 50px;
        padding-bottom: 50px;
    }
</style>

<div class="jumbotron">
  <h1>Public Infrastructures</h1>

  <p class="lead text-info">Live statistics of the PaaS vendor landscape<sup class="muted">
    <small><a href="#footnotes">1</a></small>
  </sup>.
  </p>
</div>

<div class="row">
  <div class="span12">
    <h2><span class="text-info">Distribution and Density</span></h2>
    Below is a heat map of the world showing the geographical distribution and density of public PaaS infrastructures.
    The more saturated the orange countries are, the more offerings support an application deployment in that
    geographical region.
    The markers indicate data center locations that are specified more precisely.
  </div>
  <div id="map" style="height: 400px;" class="span12 chart"></div>
  <div class="span12">
    <h2><span class="text-info">Distribution</span></h2>
    Continental distribution:
    <% @chart.top_continents.each do |c| %>
        <span class="label label-inverse"><%= c[0] %></span> (<%= c[1] %> %)
    <% end %>
    Top countries are: <%= @chart.top_countries.join(',') %> (31 times)
    The mean number of available infrastructure options in public offerings is
    <span class="label label-inverse"><%= @chart.mean_count %></span>.
    Median <span class="label label-inverse"><%= @chart.median_count %></span>.
    Modus <span class="label label-inverse"><%= @chart.mode_count %></span>.
    At least
    <span class="label label-inverse"><%= (@chart.external_providers / @chart.vendor_count.to_f * 100).round(0) %>
      %</span> use external IaaS providers for their infrastructure management.
  </div>
</div>

<div id="footnotes">
  <small><sup class="muted">1</sup> The data source is the most recent collection of
    <a href="https://github.com/stefan-kolb/paas-profiles/tree/master/profiles">PaaS profiles</a>.
  </small>
</div>

<script src="../js/jquery-jvectormap-1.2.2.min.js"></script>
<script src="../js/jquery-jvectormap-world-mill-en.js"></script>
<script>
    $(document).ready(function () {
        var data = <%= @chart.infras %>;

        $('#map').vectorMap({
            map: 'world_mill_en',
            regionStyle: {
                initial: {
                    fill: '#0088cc'
                },
                hover: {
                    'fill-opacity': 0.6
                }
            },
            backgroundColor: '#ffffff',
            series: {
                regions: [
                    {
                        values: data,
                        scale: ['#fde9cd', '#f89406'],
                        normalizeFunction: 'polynomial'
                    }
                ]
            },
            onRegionLabelShow: function (e, el, code) {
                if (!data.hasOwnProperty(code)) {
                    // the hovered region is not part of the regionResults, don't show the label
                    e.preventDefault();
                    return false;
                }
                el.html(el.html() + ' (' + data[code] + ' times)');
            },
            markerStyle: {
                initial: {
                    fill: '#ffffff',
                    stroke: '#000000'
                }
            },
            markers:
            <%
                markers = []

                Datacenter.all.each do |center|
                    markers << { latLng: center.coordinates, name: "#{center}" }
                end
            %>
            <%= markers.to_json %>
        });
    })
    ;
</script>